do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000304937362671
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.90870666504e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.70363616943e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.48905944824e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=9.01222229004e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.60691070557e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.50746917725e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=7.60555267334e-05
executed snippet estimated_duration=108.0, duration=0.00670599937439
script duration name:cocktail_x1 seconds:108.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000137090682983
executed snippet estimated_duration=4.0, duration=0.00121402740479
Script duration 664.0
Run total estimated duration= 665.000
run duration: 0:11:05
doing event level: 2
14:21:52 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4963741968
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bc-02-J-644
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bc-02-J-644
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
14:21:52 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.08625,0.05210,-0.11220,-0.06026,0.04650,0.00000
14:21:52 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 0
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 0.0}"
14:21:52 -- ******* Pre Extraction Check Passed *******
=================================================================================
14:21:52 -- stopping status monitor
stop 4941257808
Status monitor stopped
Status monitor finished
14:21:53 -- starting status monitor
start 4941257808
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 14:21:55.416973
Extraction Started jan_cocktail_x1.py
14:21:55 -- ******* Extraction Started jan_cocktail_x1.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12bb06fb0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.60283660889e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000205993652344
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.20159912109e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.89165496826e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.41210174561e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=7.60555267334e-05
executed snippet estimated_duration=108.0, duration=0.00637102127075
Jan Cocktail Pipette x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.10079956055e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed snippet estimated_duration=0, duration=0.0152699947357
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000124931335449
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
14:21:55 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
14:21:56 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=3
14:21:56 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=3
14:21:57 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
14:21:57 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=3
14:21:58 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
14:21:58 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
14:21:59 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
14:21:59 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
14:22:00 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
GetIndicatorState T ===>> False
change switch state (True, True)
update switch state T False args=() kw={} ncanvase=3
14:22:01 -- CLOSE  VALVE-T (Microbone to CO2 Laser)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.90120697021
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000123023986816
Evacuate Pipette 1
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
14:22:01 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=3
14:22:02 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 1'}
close name=--- desc=Inner Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks X
interlocks ['W']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close X ===>> OK
GetIndicatorState X ===>> False
change switch state (True, True)
update switch state X False args=() kw={} ncanvase=3
14:22:02 -- CLOSE  VALVE-X (Inner Pipette 1)
-------------------------- close None (Inner Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 1'}
open name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open W ===>> OK
GetIndicatorState W ===>> OK
change switch state (True, True)
update switch state W True args=() kw={} ncanvase=3
14:22:03 -- OPEN   VALVE-W (Outer Pipette 1)
-------------------------- open None (Outer Pipette 1) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0364379883
executed snippet estimated_duration=48.0, duration=17.9155659676
EvacPipette1.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.51154327393e-05
Fill Pipette 1
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=3
14:22:19 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling cocktail pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.04403615
close () {'description': 'Inner Pipette 1'}
close name=--- desc=Inner Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks X
interlocks ['W']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close X ===>> OK
GetIndicatorState X ===>> False
change switch state (True, True)
update switch state X False args=() kw={} ncanvase=3
14:22:35 -- CLOSE  VALVE-X (Inner Pipette 1)
-------------------------- close None (Inner Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.8374419212
FillPipette1.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.29560852051e-05
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=3
14:22:37 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
14:22:37 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01551413536
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=3
14:22:40 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.47163581848
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=9.70363616943e-05
Expand Pipette 1
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
14:22:40 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.0048558712
open () {'description': 'Outer Pipette 1'}
open name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open W ===>> OK
GetIndicatorState W ===>> OK
change switch state (True, True)
update switch state W True args=() kw={} ncanvase=3
14:22:43 -- OPEN   VALVE-W (Outer Pipette 1)
-------------------------- open None (Outer Pipette 1) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0446197987
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.0043489933
executed snippet estimated_duration=57.0, duration=19.9224441051
ExpandPipette1.py completed successfully
gosub finished
executed snippet estimated_duration=108.0, duration=65.0844671726
jan_cocktail_x1.py completed successfully
no extraction action
Requested Output= 0.000
Achieved Output=  0.000
no extraction action
no extraction action
no extraction action
no extraction action
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Extraction Finished
14:23:00 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
14:23:00 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.147042666178
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0567 5.8800 6.2788 6.3952 6.5176 6.6805
Ar39     6.0116 5.7710 6.1692 6.3383 6.4003 6.5670
Ar36     5.6891 5.4400 5.8326 5.9972 6.0553 6.2181
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.035158395898
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=bc-02-J analysis type=blank_cocktail
Measurement Started jan_unknown400_120.py
14:23:00 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.096129
GetGain L1 ===>> 0.010749
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 197.923274125618
GetParameter Source Current Readback ===>> 554.117988158457
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/b3/f6aa81-5d61-43e3-8bd6-4ded895921a4.h5
flush and close file /Users/jan/PychronDev/data/isotopes/b3/f6aa81-5d61-43e3-8bd6-4ded895921a4.h5
testing...
no interpolation path defined
executed snippet estimated_duration=571.652928, duration=0.000174999237061
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=
setting isotope det=AX, iso=
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar40
setting isotope det=CDD, iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.03064323e+00]
H1 map mass to dac 39.9624 >> 5.88005
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.88001537294) on H1
setting magnet DAC
current  : 6.505818
requested: 5.880015
Delta Dac: 0.625802
Checking detector protection. dv=0.62580
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.88001537294 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x13597d890>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x1488ae890>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x1489786b0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 15.0}
Equilibration Started
14:23:04 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
set states for children of O. state=False
handle state [('O', False)]
update switch state O False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=3
14:23:05 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=3
14:23:08 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 15.0sec
set_time_zero () {}
sniff (15.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/b3/f6aa81-5d61-43e3-8bd6-4ded895921a4.h5
measuring sniff. ncounts=15.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
14:23:23 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
14:23:24 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
14:23:24 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000149965286255
executed snippet estimated_duration=4.0, duration=0.00966691970825
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000132083892822
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
14:23:24 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
waiting for write to finish
measurement finished
estimated time: 15.729 actual time: :15.852
flush and close file /Users/jan/PychronDev/data/isotopes/b3/f6aa81-5d61-43e3-8bd6-4ded895921a4.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
is closed True
set "Ar39" to "('Parabolic', 'SEM')"
open () {'description': 'CO2 Laser to Jan'}
set_baseline_fits () {}
open name=--- desc=CO2 Laser to Jan
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
checking ownership. requestor=129.138.12.150
check software interlocks A
set "H2" to "('average', 'SEM')"
interlocks []
set "H1" to "('average', 'SEM')"
actuate state mode=None-script, software_lock=False
set "CDD" to "('average', 'SEM')"
doing actuation None-script open_channel False
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/b3/f6aa81-5d61-43e3-8bd6-4ded895921a4.h5
measuring signal. ncounts=400
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
14:23:25 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
"signal" increment series count="2" fit count="1" regressing="True"
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
starting measurement
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
14:23:26 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
14:23:27 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
14:23:28 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
14:23:28 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
14:23:29 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.63127493858
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.79085540771e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=3
14:23:31 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
set states for children of I. state=True
handle state [('I', True)]
update switch state I True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=3
14:23:31 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=3
14:23:32 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=3
14:23:34 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=3
14:23:34 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
Join finished
block finished. duration 15.0469601154
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=3
14:23:50 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=3
14:23:50 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:23:50 -- collecting point 25
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=20.0027530193
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=26.6735022068
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
14:23:50 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:24:17 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:24:43 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:25:09 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:25:35 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:26:02 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:26:28 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:26:54 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:27:20 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:27:47 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:28:13 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:28:39 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:29:05 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:29:32 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:29:58 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07491187140910135}"
14:30:24 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.396
flush and close file /Users/jan/PychronDev/data/isotopes/b3/f6aa81-5d61-43e3-8bd6-4ded895921a4.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/b3/f6aa81-5d61-43e3-8bd6-4ded895921a4.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.03064323e+00]
H1 map mass to dac 34.2 >> 5.24216160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.24213073713) on H1
setting magnet DAC
current  : 5.880015
requested: 5.242131
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.24213073713 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08309768011985917}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06757945877357509}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07573056709423123}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07558962408894426}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.084987305516728}"
14:31:09 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07965053485117345}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08039288122395505}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07644541179543933}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0760330638973194}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07696699918403656}"
14:31:35 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07578183675275632}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07520735438606682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07711185817765592}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07598013714949584}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07536102217806089}"
14:32:02 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07430605222539563}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07462904643824077}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07605545379501395}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0757128052083763}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07384588010643359}"
14:32:28 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07253609796077286}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07301242403134368}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07330497064649401}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07234547388483724}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.206
flush and close file /Users/jan/PychronDev/data/isotopes/b3/f6aa81-5d61-43e3-8bd6-4ded895921a4.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=6.20515276657 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x13597dc50>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x11994f590>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x13597dc50>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x11994f590>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x134ccecb0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x11994f590>]
setting integration time = 0.524288
SetIntegrationTime 0.524288 ===>> OK
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.03064323e+00]
H1 map mass to dac 39.9624 >> 5.88005
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x13308cb30>
doing pc
starting peak center. center dac= 5.88001537294 step_width=0.001
width = 0.001
get scan parameters. half-width=0.025,window=0.025, i=0, scalar=1
Scan parameters center=5.88002 width=0.05000 (5.85502 - 5.90502)
Moving to starting dac 5.85501537294
setting magnet DAC
current  : 5.242131
requested: 5.855015
Delta Dac: 0.612885
Checking detector protection. dv=0.61288
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.85501537294 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.00076146029431. timeout= 10
Peak center baseline intensity achieved
_do_sweep sm= 5.85501537294, em= 5.90501537294, stm= 0.001
calculated step values: start=5.85501537294, end=5.90501537294, width=0.001, nsteps=51.0
setting magnet DAC
current  : 5.855015
requested: 5.855015
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.85501537294 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.855015
requested: 5.856015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.85601537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.856015
requested: 5.857015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.85701537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.857015
requested: 5.858015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.85801537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.858015
requested: 5.859015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.85901537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.859015
requested: 5.860015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86001537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.860015
requested: 5.861015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86101537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.861015
requested: 5.862015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86201537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.862015
requested: 5.863015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86301537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.863015
requested: 5.864015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86401537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.864015
requested: 5.865015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86501537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865015
requested: 5.866015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86601537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866015
requested: 5.867015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86701537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867015
requested: 5.868015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86801537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868015
requested: 5.869015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86901537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869015
requested: 5.870015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87001537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870015
requested: 5.871015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87101537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871015
requested: 5.872015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87201537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872015
requested: 5.873015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87301537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873015
requested: 5.874015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87401537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874015
requested: 5.875015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87501537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875015
requested: 5.876015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87601537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876015
requested: 5.877015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87701537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877015
requested: 5.878015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87801537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878015
requested: 5.879015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87901537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879015
requested: 5.880015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88001537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880015
requested: 5.881015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88101537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881015
requested: 5.882015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88201537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882015
requested: 5.883015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88301537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883015
requested: 5.884015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88401537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884015
requested: 5.885015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88501537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885015
requested: 5.886015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88601537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886015
requested: 5.887015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88701537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887015
requested: 5.888015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88801537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888015
requested: 5.889015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88901537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889015
requested: 5.890015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89001537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890015
requested: 5.891015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89101537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.891015
requested: 5.892015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89201537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892015
requested: 5.893015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89301537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.893015
requested: 5.894015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89401537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.894015
requested: 5.895015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89501537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.895015
requested: 5.896015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89601537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.896015
requested: 5.897015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89701537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.897015
requested: 5.898015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89801537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.898015
requested: 5.899015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89901537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.899015
requested: 5.900015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.90001537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.900015
requested: 5.901015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.90101537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.901015
requested: 5.902015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.90201537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.902015
requested: 5.903015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.90301537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.903015
requested: 5.904015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.90401537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.904015
requested: 5.905015
Delta Dac: 0.001000
Checking detector protection. dv=0.00100
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.90501537294 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8721997416744065, 5.8798650723357291, 5.8875304029970517], [5.6288214796647198, 7.7403997175435446, 5.6326454995099589], 5.8819692807525623, 7.7403997175435446)
Failed to find a valid peak. No peak greater than 1.0. max = 0.358576587029
Failed to find a valid peak. No peak greater than 1.0. max = 0.151533429516
Failed to find a valid peak. No peak greater than 1.0. max = 0.0218381737661
new center pos Detector(H1) (Ar40) @ 5.87986507234
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87989969851
update mftable H1 Ar40 5.87989969851 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.905015
requested: 5.879865
Delta Dac: 0.025150
Checking detector protection. dv=0.02515
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87986507234 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
Failed to find a valid peak. No peak greater than 1.0. max = 0.358576587029
Failed to find a valid peak. No peak greater than 1.0. max = 0.151533429516
Failed to find a valid peak. No peak greater than 1.0. max = 0.0218381737661
flush and close file /Users/jan/PychronDev/data/isotopes/b3/f6aa81-5d61-43e3-8bd6-4ded895921a4.h5
finished measure script
executed snippet estimated_duration=571.652928, duration=657.564311981
jan_unknown400_120.py completed successfully
Measurement Finished
14:33:58 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
14:33:58 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.28881835938e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
14:33:58 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.403578042984
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
14:33:59 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-06-23T14:26:23',
                    'title': 'iServer Hum.',
                    'value': 23.2}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-06-23T14:32:31',
                     'title': None,
                     'value': 88.35},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-06-23T14:32:34',
                     'title': None,
                     'value': 88.50556}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-06-23T08:29:27',
                       'title': None,
                       'value': -194.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-06-23T14:23:21',
                       'title': 'iServer Temp.',
                       'value': 75.7},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-06-23T14:14:39',
                       'title': None,
                       'value': 18.0}]}
persistence save...
persistence save - db
post measurement save
5167169072 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 5167169072
close session 5167169072
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 5161550192
MassSpec Database Version: 16.0
close session 5161550192
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to bc-02-J
setting aliquot to 644
setting step to 
setting uuid to b3f6aa81-5d61-43e3-8bd6-4ded895921a4
setting irradpos to bc-02-J
setting extract_device to Extract Device
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to Box off 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_cocktail
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment: Box off  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x1560375d0> len t=120
baseline Ar41. v=-0.0800109375588, e=0.00286343359167
get signal data Ar41 H2
Get data signal Ar41 0.0164+/-0.0034 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x156037cd0> len t=120
baseline Ar40. v=0.0725721341122, e=0.00356059214744
get signal data Ar40 H1
Get data signal Ar40 2.362+/-0.007 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x156043210> len t=120
baseline Ar39. v=-0.0540458473018, e=0.00482667066898
get signal data Ar39 AX
Get data signal Ar39 0.013+/-0.009 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1560378d0> len t=120
baseline Ar38. v=-0.0367960212807, e=0.00222789688211
get signal data Ar38 L1
Get data signal Ar38 0.0043+/-0.0020 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x156043050> len t=120
baseline Ar37. v=-0.0262390375076, e=0.00419949435814
get signal data Ar37 L2
Get data signal Ar37 0.059+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x156037e90> len t=120
baseline Ar36. v=9.9131572565e-06, e=3.40018488757e-06
get signal data Ar36 CDD
Get data signal Ar36 0.01082+/-0.00021 len t=400
bc-02-J-644 added analysis time 0.526117086411s
analysis added to mass spec database
mass spec save time= 0.535
persistence save - dvc
================= post measurement started
create new session 4940872880
close session 4940872880
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.358576587029
Failed to find a valid peak. No peak greater than 1.0. max = 0.151533429516
Failed to find a valid peak. No peak greater than 1.0. max = 0.0218381737661
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-644.json
add to repo msg=modified - -J-644.dat.json
add to repo msg=modified - -J-644.blan.json
add to repo msg=modified - -J-644.inte.json
add to repo msg=modified - -J-644.icfa.json
add to repo msg=modified - -J-644.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_cocktail170/bc-02/tags/-J-644.tags.json
add to repo msg=modified - -J-644.peak.json
add to repo msg=modified - -J-644.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_cocktail170/bc-02/monitor/-J-644.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-644.inte.json
add to repo msg=modified - -J-644.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-644.blan.json
commit message=<BLANKS> preceding ba-01-J-2563
add to repo msg=modified - -J-644.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x12cf04ad0>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4940872880
add association Jan_cocktail170
get identifier "bc-02-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x132815090>
close session 4940872880
================= post measurement finished
14:34:16 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
14:34:16 -- ******* Post Run Check Passed *******
14:34:16 -- Automated run bc-02-J-644 success duration: 744.728 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
update duration runid=bc-02-J-644, duration=744.728480816, md5=11334575
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/Test_For_Drift.rem.txt
/Users/jan/PychronDev/experiments/rem/Test_For_Drift.ex.txt
doing event level: 3
add run
