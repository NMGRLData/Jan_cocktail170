do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000202894210815
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.00407409668e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000108003616333
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.89301300049e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.98430633545e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=8.08238983154e-05
executed snippet estimated_duration=108.0, duration=0.00750708580017
script duration name:cocktail_x1 seconds:108.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000143051147461
executed snippet estimated_duration=4.0, duration=0.00118923187256
Script duration 664.0
Run total estimated duration= 665.000
run duration: 0:11:05
doing event level: 2
11:02:49 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4955096752
close session 4955096752
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run c-02-J-2185
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run c-02-J-2185
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
11:02:50 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.09494,0.10343,-0.05063,-0.02074,-0.03064,0.00075
11:02:50 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
11:02:50 -- ******* Pre Extraction Check Passed *******
=================================================================================
11:02:50 -- stopping status monitor
stop 4941681008
Status monitor stopped
Status monitor finished
11:02:51 -- starting status monitor
start 4941681008
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 11:02:53.097940
Extraction Started jan_cocktail_x1.py
11:02:53 -- ******* Extraction Started jan_cocktail_x1.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x129462890>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.17911529541e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.29832458496e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=7.79628753662e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.39233398438e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.3882598877e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000104904174805
executed snippet estimated_duration=108.0, duration=0.00686001777649
Jan Cocktail Pipette x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.69548797607e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed snippet estimated_duration=0, duration=0.0169148445129
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000130891799927
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=10
11:02:53 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=10
11:02:54 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=10
11:02:54 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=10
11:02:55 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=10
11:02:56 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=10
11:02:56 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=10
11:02:56 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=10
11:02:57 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=10
11:02:58 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=10
11:02:58 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
GetIndicatorState T ===>> False
change switch state (True, True)
update switch state T False args=() kw={} ncanvase=10
11:02:59 -- CLOSE  VALVE-T (Microbone to CO2 Laser)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=6.8115260601
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000228881835938
Evacuate Pipette 1
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=10
11:03:00 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
set states for children of L. state=True
handle state [('L', True)]
update switch state L True args=() kw={'refresh': False} ncanvase=10
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=10
refresh_canvas_needed fired
11:03:00 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 1'}
close name=--- desc=Inner Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks X
interlocks ['W']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close X ===>> OK
GetIndicatorState X ===>> False
change switch state (True, True)
update switch state X False args=() kw={} ncanvase=10
11:03:01 -- CLOSE  VALVE-X (Inner Pipette 1)
-------------------------- close None (Inner Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 1'}
open name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open W ===>> OK
GetIndicatorState W ===>> OK
change switch state (True, True)
update switch state W True args=() kw={} ncanvase=10
11:03:02 -- OPEN   VALVE-W (Outer Pipette 1)
-------------------------- open None (Outer Pipette 1) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0591158867
executed snippet estimated_duration=48.0, duration=18.1477439404
EvacPipette1.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.00012993812561
Fill Pipette 1
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=10
11:03:18 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
filling cocktail pipette
open () {'description': 'Inner Pipette 1'}
open name=--- desc=Inner Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks X
interlocks ['W']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open X ===>> OK
GetIndicatorState X ===>> OK
change switch state (True, True)
update switch state X True args=() kw={} ncanvase=10
11:03:19 -- OPEN   VALVE-X (Inner Pipette 1)
-------------------------- open None (Inner Pipette 1) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0405409336
close () {'description': 'Inner Pipette 1'}
close name=--- desc=Inner Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks X
interlocks ['W']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close X ===>> OK
GetIndicatorState X ===>> False
change switch state (True, True)
update switch state X False args=() kw={} ncanvase=10
11:03:35 -- CLOSE  VALVE-X (Inner Pipette 1)
-------------------------- close None (Inner Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.2925319672
FillPipette1.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000139951705933
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=10
11:03:36 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=10
11:03:36 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00479888916
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=10
11:03:39 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.53188800812
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000163078308105
Expand Pipette 1
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=10
11:03:40 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00807094574
open () {'description': 'Outer Pipette 1'}
open name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open W ===>> OK
GetIndicatorState W ===>> OK
increment shot count 2673
saved current shot count 2673
change switch state (True, True)
update switch state W True args=() kw={} ncanvase=10
11:03:42 -- OPEN   VALVE-W (Outer Pipette 1)
-------------------------- open None (Outer Pipette 1) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0455610752
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00759911537
executed snippet estimated_duration=57.0, duration=20.3615269661
ExpandPipette1.py completed successfully
gosub finished
executed snippet estimated_duration=108.0, duration=67.1824901104
jan_cocktail_x1.py completed successfully
Get Handler timed out. timeout=3. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
GetAchievedOutput ===>> ERROR: Connection refused: TCP://129.138.12.133:1063, timeout=None
Requested Output= 0.000
Achieved Output=  0.000
Get Handler timed out. timeout=3. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
GetResponseBlob ===>> ERROR: Connection refused: TCP://129.138.12.133:1063, timeout=None
Get Handler timed out. timeout=3. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
GetOutputBlob ===>> ERROR: Connection refused: TCP://129.138.12.133:1063, timeout=None
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Extraction Finished
11:04:11 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
11:04:11 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.147042666178
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0552 5.8786 5.9922 6.1937 6.2302 6.6790
Ar39     6.0101 5.7696 6.0563 6.3368 6.1129 6.5655
Ar36     5.6876 5.4386 5.7197 5.9957 5.7679 6.2166
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.147042666178
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=c-02-J analysis type=cocktail
Measurement Started jan_unknown400_120.py
11:04:11 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09625
GetGain L1 ===>> 0.01002
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.147042666178
GetParameter Source Current Readback ===>> 552.414881279375
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/df/9ca021-a27a-4ad8-9550-f04446ab047a.h5
flush and close file /Users/jan/PychronDev/data/isotopes/df/9ca021-a27a-4ad8-9550-f04446ab047a.h5
testing...
no interpolation path defined
executed snippet estimated_duration=571.652928, duration=0.000152826309204
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.0125+/-0.0034
 - setting Ar40 blank 2.302+/-0.009
 - setting Ar36 blank 0.01046+/-0.00024
 - setting Ar37 blank 0.046+/-0.005
 - setting Ar38 blank 0.0117+/-0.0022
 - setting Ar39 blank 0.022+/-0.009
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02922323e+00]
H1 map mass to dac 39.9624 >> 5.87863
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.8785953813) on H1
setting magnet DAC
current  : 5.878595
requested: 5.878595
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8785953813 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x16991a290>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x135594a10>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x135594530>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 15.0}
Equilibration Started
11:04:12 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=10
11:04:12 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=10
11:04:16 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero () {}
equilibrating for 15.0sec
sniff (15.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/df/9ca021-a27a-4ad8-9550-f04446ab047a.h5
measuring sniff. ncounts=15.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
11:04:31 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=10
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=10
refresh_canvas_needed fired
11:04:32 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
11:04:32 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000149011611938
executed snippet estimated_duration=4.0, duration=0.00131487846375
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000133991241455
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
waiting for write to finish
Close R ===>> OK
measurement finished
estimated time: 15.729 actual time: :15.857
flush and close file /Users/jan/PychronDev/data/isotopes/df/9ca021-a27a-4ad8-9550-f04446ab047a.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=10
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/df/9ca021-a27a-4ad8-9550-f04446ab047a.h5
measuring signal. ncounts=400
11:04:32 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
"signal" increment series count="2" fit count="1" regressing="True"
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=10
11:04:33 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
starting measurement
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=10
11:04:34 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=10
11:04:35 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=10
11:04:35 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=10
11:04:36 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=10
11:04:37 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.54387497902
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.19616699219e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=10
11:04:39 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=10
11:04:39 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=10
11:04:40 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=10
11:04:42 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=10
11:04:43 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
Join finished
block finished. duration 15.0559799671
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:04:58 -- collecting point 25
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=10
11:04:58 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=10
11:04:59 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=20.7657029629
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=27.323887825
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
11:04:59 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:05:24 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:05:51 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:06:17 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:06:43 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:07:09 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:07:36 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:08:02 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:08:28 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:08:54 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:09:21 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:09:47 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:10:13 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:10:39 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:11:06 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
State checksums do not match. Local:-860229079 Remote:505078994
State checksum failed
set states for children of E. state=True
set states for children of Q. state=False
handle state [('E', True), ('Q', False)]
update switch state E True args=() kw={'refresh': True} ncanvase=10
update switch state Q False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
set states for children of B. state=False
set states for children of D. state=False
handle state [('B', False), ('D', False)]
update switch state B False args=() kw={'refresh': True} ncanvase=10
update switch state D False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1097237664573496}"
11:11:32 -- collecting point 400
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.346
flush and close file /Users/jan/PychronDev/data/isotopes/df/9ca021-a27a-4ad8-9550-f04446ab047a.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/df/9ca021-a27a-4ad8-9550-f04446ab047a.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02922323e+00]
H1 map mass to dac 34.2 >> 5.24074160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.24071074549) on H1
setting magnet DAC
current  : 5.878595
requested: 5.240711
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.24071074549 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.053820099356383176}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06975740145791376}"
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08600803659027302}"
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
set states for children of P. state=False
handle state [('P', False)]
update switch state P False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09306080478627489}"
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09999443236617948}"
11:12:17 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1069104130803113}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11244519082340243}"
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11941331911574192}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11613776578231537}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11670187523799051}"
11:12:43 -- collecting point 50
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11436502787674975}"
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11281497287724367}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11433625819881338}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11391362937725225}"
State checksums do not match. Local:-1891236928 Remote:610848153
State checksum failed
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11515302963922774}"
11:13:09 -- collecting point 75
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11331520576984545}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11254124494447257}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11250559435563362}"
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11194625355780473}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11161814506774036}"
11:13:36 -- collecting point 100
ask. get packet. error: timed out address: UDP://129.138.12.152:1069
ask. get packet. error: timed out address: UDP://129.138.12.152:1069
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1112929299163141}"
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11045770111207631}"
State checksums do not match. Local:610848153 Remote:855128171
State checksum failed
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11021853697582734}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.110238904489218}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.298
flush and close file /Users/jan/PychronDev/data/isotopes/df/9ca021-a27a-4ad8-9550-f04446ab047a.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=995.246215466 threshold=5.0
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x170b44230>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x137165a10>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x170b44230>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x137165a10>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x170b44230>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x137165a10>]
setting integration time = 0.524288
SetIntegrationTime 0.524288 ===>> OK
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02922323e+00]
H1 map mass to dac 39.9624 >> 5.87863
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x150122770>
doing pc
starting peak center. center dac= 5.8785953813 step_width=0.001
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87860 width=0.03000 (5.86360 - 5.89360)
Moving to starting dac 5.8635953813
setting magnet DAC
current  : 5.240711
requested: 5.863595
Delta Dac: 0.622885
Checking detector protection. dv=0.62288
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.8635953813 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.00651749089906. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.8635953813, em= 5.8935953813, stm= 0.001
calculated step values: start=5.8635953813, end=5.8935953813, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.863595
requested: 5.863595
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8635953813 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863595
requested: 5.864630
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86462986406 ===>> OK
Magnet settling time: 1.049 0.500
============ Exception ==============
Traceback (most recent call last):
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/enable/qt4/base_window.py", line 198, in paintEvent
    self.handler.paintEvent(event)
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/enable/qt4/base_window.py", line 50, in paintEvent
    self._enable_window._paint(event)
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/enable/abstract_window.py", line 467, in _paint
    self.component.draw(gc, view_bounds=(0, 0, size[0], size[1]))
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/enable/component.py", line 421, in draw
    self._draw(gc, view_bounds, mode)
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/enable/component.py", line 773, in _draw
    self._dispatch_draw(layer, gc, view_bounds, mode)
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/enable/container.py", line 327, in _dispatch_draw
    component._dispatch_draw(layer, gc, new_bounds, mode)
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/enable/container.py", line 312, in _dispatch_draw
    my_handler(gc, view_bounds, mode)
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/enable/container.py", line 352, in _draw_container_underlay
    self._draw_underlay(gc, view_bounds, mode)
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/enable/component.py", line 881, in _draw_underlay
    underlay.overlay(self, gc, view_bounds, mode)
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/chaco/grid.py", line 306, in overlay
    self._draw_component(gc, view_bounds, mode)
File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/chaco/grid.py", line 344, in _draw_component
    ends[:,0] = self._tick_extents[:,1]
IndexError: too many indices for array
============ End Exception ==========
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.864630
requested: 5.865664
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86566434682 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865664
requested: 5.866699
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86669882958 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866699
requested: 5.867733
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86773331233 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867733
requested: 5.868768
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86876779509 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868768
requested: 5.869802
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86980227785 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869802
requested: 5.870837
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
ask. get packet. error: timed out address: UDP://129.138.12.152:1069
SetMagnetDAC 5.87083676061 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870837
requested: 5.871871
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87187124337 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871871
requested: 5.872906
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87290572613 ===>> OK
Magnet settling time: 1.049 0.500
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872906
requested: 5.873940
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87394020889 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873940
requested: 5.874975
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87497469164 ===>> OK
Magnet settling time: 1.049 0.500
set states for children of C. state=True
handle state [('C', True)]
update switch state C True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874975
requested: 5.876009
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
State checksums do not match. Local:1242363369 Remote:1269278284
State checksum failed
SetMagnetDAC 5.8760091744 ===>> OK
Magnet settling time: 1.049 0.500
set states for children of B. state=True
set states for children of D. state=True
handle state [('B', True), ('D', True)]
update switch state B True args=() kw={'refresh': True} ncanvase=10
Magnet settling complete
set_dac. change=True
update switch state D True args=() kw={'refresh': False} ncanvase=10
setting magnet DAC
current  : 5.876009
requested: 5.877044
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
refresh_canvas_needed fired
SetMagnetDAC 5.87704365716 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877044
requested: 5.878078
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87807813992 ===>> OK
Magnet settling time: 1.049 0.500
set states for children of I. state=False
set states for children of Q. state=True
set states for children of P. state=True
handle state [('I', False), ('Q', True), ('P', True)]
update switch state I False args=() kw={'refresh': True} ncanvase=10
update switch state Q True args=() kw={'refresh': True} ncanvase=10
update switch state P True args=() kw={'refresh': False} ncanvase=10
refresh_canvas_needed fired
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878078
requested: 5.879113
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87911262268 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879113
requested: 5.880147
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88014710544 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880147
requested: 5.881182
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8811815882 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881182
requested: 5.882216
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88221607095 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882216
requested: 5.883251
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88325055371 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883251
requested: 5.884285
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
ask. get packet. error: timed out address: UDP://129.138.12.152:1069
SetMagnetDAC 5.88428503647 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884285
requested: 5.885320
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88531951923 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885320
requested: 5.886354
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88635400199 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886354
requested: 5.887388
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88738848475 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887388
requested: 5.888423
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88842296751 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888423
requested: 5.889457
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88945745026 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889457
requested: 5.890492
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89049193302 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890492
requested: 5.891526
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89152641578 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.891526
requested: 5.892561
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89256089854 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892561
requested: 5.893595
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8935953813 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8707196297961728, 5.8785953812991787, 5.8864711328021846], [676.38409477077744, 928.40141701478933, 686.00401047819253], 5.8760402710787378, 928.40141701478933)
Failed to find a valid peak. No peak greater than 1.0. max = 0.114517096009
Failed to find a valid peak. No peak greater than 1.0. max = 0.0632671898387
new center pos Detector(H1) (Ar40) @ 5.8785953813
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87863
update mftable H1 Ar40 5.87863 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
locally archiving mftable
setting magnet DAC
current  : 5.893595
requested: 5.878595
Delta Dac: 0.015000
Checking detector protection. dv=0.01500
Checking detector "CDD". Protection Threshold: 0.5 (V)
sweep finished
SetMagnetDAC 5.8785953813 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
Failed to find a valid peak. No peak greater than 1.0. max = 0.114517096009
Failed to find a valid peak. No peak greater than 1.0. max = 0.0632671898387
flush and close file /Users/jan/PychronDev/data/isotopes/df/9ca021-a27a-4ad8-9550-f04446ab047a.h5
finished measure script
executed snippet estimated_duration=571.652928, duration=635.559863091
jan_unknown400_120.py completed successfully
Measurement Finished
11:14:47 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
11:14:47 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.81605529785e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=10
11:14:47 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.376139163971
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
11:14:47 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-07-18T10:38:33',
                    'title': 'iServer Hum.',
                    'value': 54.3},
                   {'device': 'RPiWeather',
                    'name': 'Lab Hum. 2',
                    'pub_date': '2017-07-18T11:14:29',
                    'title': 'Base Station Hum.',
                    'value': 54.0715827941895}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-07-18T11:13:15',
                     'title': None,
                     'value': 95.175},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-07-18T11:13:15',
                     'title': None,
                     'value': 96.47092},
                    {'device': 'RPiWeather',
                     'name': 'Lab Pressure',
                     'pub_date': '2017-07-18T11:11:43',
                     'title': None,
                     'value': 867.53271484375}],
 'lab_temperatures': [{'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-07-18T09:57:48',
                       'title': 'iServer Temp.',
                       'value': 73.7},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-07-18T11:14:07',
                       'title': None,
                       'value': 18.0},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 2',
                       'pub_date': '2017-07-18T11:14:16',
                       'title': 'Base Station Temp.',
                       'value': 79.5085735321045},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 3',
                       'pub_date': '2017-07-18T09:39:49',
                       'title': 'EastDiffuser01',
                       'value': 60.8},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 4',
                       'pub_date': '2017-07-18T11:14:04',
                       'title': 'EastReturn02',
                       'value': 71.4866},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 5',
                       'pub_date': '2017-07-18T10:31:51',
                       'title': 'iServerCalibration03',
                       'value': 73.0616},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 6',
                       'pub_date': '2017-07-18T09:43:48',
                       'title': 'SouthWall04',
                       'value': 71.9366},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 7',
                       'pub_date': '2017-07-18T11:14:04',
                       'title': 'SouthWindow05',
                       'value': 74.975}]}
persistence save...
persistence save - db
post measurement save
6198581968 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 6198581968
close session 6198581968
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 5625878288
MassSpec Database Version: 16.0
close session 5625878288
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to c-02-J
setting aliquot to 2185
setting step to 
setting uuid to df9ca021-a27a-4ad8-9550-f04446ab047a
setting irradpos to c-02-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to Cocktail-02
setting level to A
setting irradiation_level to A
setting sample to cocktail
setting material to Gas
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x170ec9b90> len t=120
baseline Ar41. v=-0.0936150976959, e=0.00275235958957
get signal data Ar41 H2
Get data signal Ar41 0.067+/-0.004 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x170ec9b10> len t=120
baseline Ar40. v=0.109439083629, e=0.00347745298136
get signal data Ar40 H1
Get data signal Ar40 1140.96+/-0.05 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x170ec9790> len t=120
baseline Ar39. v=-0.0433760866129, e=0.0040131690841
get signal data Ar39 AX
Get data signal Ar39 91.191+/-0.014 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x170ec9310> len t=120
baseline Ar38. v=-0.0241112959824, e=0.00200614528756
get signal data Ar38 L1
Get data signal Ar38 1.1595+/-0.0023 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x170ec96d0> len t=120
baseline Ar37. v=-0.0261853753921, e=0.00432718099339
get signal data Ar37 L2
Get data signal Ar37 0.055+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x170ec9490> len t=120
baseline Ar36. v=0.000176570273758, e=1.297451818e-05
get signal data Ar36 CDD
Get data signal Ar36 0.0440+/-0.0004 len t=400
4416-2185 added analysis time 0.571354150772s
analysis added to mass spec database
mass spec save time= 0.584
persistence save - dvc
================= post measurement started
create new session 4941320848
close session 4941320848
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.114517096009
Failed to find a valid peak. No peak greater than 1.0. max = 0.0632671898387
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-2185.json
add to repo msg=modified - -J-2185.dat.json
add to repo msg=modified - -J-2185.blan.json
add to repo msg=modified - -J-2185.inte.json
add to repo msg=modified - -J-2185.icfa.json
add to repo msg=modified - -J-2185.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_cocktail170/c-02/tags/-J-2185.tags.json
add to repo msg=modified - -J-2185.peak.json
add to repo msg=modified - -J-2185.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_cocktail170/c-02/monitor/-J-2185.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-2185.inte.json
add to repo msg=modified - -J-2185.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-2185.blan.json
commit message=<BLANKS> preceding bc-02-J-741
add to repo msg=modified - -J-2185.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x1541151d0>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4941320848
add association Jan_cocktail170
get identifier "c-02-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1620eb310>
close session 4941320848
================= post measurement finished
11:15:06 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
11:15:06 -- ******* Post Run Check Passed *******
11:15:06 -- Automated run c-02-J-2185 success duration: 736.583 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=2
update duration runid=c-02-J-2185, duration=736.583104849, md5=11334575
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x3.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000226020812988
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x3.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.50475311279e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x3.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.41345977783e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000163078308105
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000103950500488
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000108957290649
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.91413879395e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=9.79900360107e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000147104263306
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000166893005371
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000127077102661
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.70092010498e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000104904174805
executed snippet estimated_duration=254.0, duration=0.0451109409332
script duration name:air_x3 seconds:254.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x3.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000257015228271
executed snippet estimated_duration=4.0, duration=0.00203704833984
Script duration 810.0
Run total estimated duration= 811.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:556.0
pump_ms in script context. using previous estimated duration
air_x3 in script context. using previous estimated duration
script duration name:air_x3 seconds:254.0
pump_extraction_line in script context. using previous estimated duration
Script duration 810.0
Run total estimated duration= 811.000
script duration name:unknown400_120 seconds:556.0
script duration name:air_x3 seconds:254.0
Script duration 810.0
Run total estimated duration= 811.000
script duration name:unknown400_120 seconds:556.0
script duration name:air_x3 seconds:254.0
Script duration 810.0
Run total estimated duration= 811.000
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.31673431396e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000121116638184
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000108957290649
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000115156173706
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.29560852051e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=8.29696655273e-05
executed snippet estimated_duration=108.0, duration=0.0139780044556
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown400_120 seconds:556.0
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
nruns=8 before=5.0, run_dur=5904.0, btw=315.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/AirsCocktails.rem.txt
/Users/jan/PychronDev/experiments/rem/AirsCocktails.ex.txt
doing event level: 3
add run
